
|Done| Add node count regression test 'make nodes'

0 4667 4.667
1 72022 15.4322
2 276885 3.84445
3 656101 2.36958
4 1465726 2.23399
5 4268470 2.91219
6 12369825 2.89795
7 41353130 3.34307
8 145561974 3.51997

0 4667 4.667
1 72022 15.4322
2 276885 3.84445
3 656220 2.37001
4 1476931 2.25066
5 4500497 3.0472
6 13429713 2.98405
7 50237376 3.74076
8 188069105 3.74361

------------------------------------------------------------------------

|Todo| Add __version__ to module

|Todo| Introduce move flags

|Todo| Run program through valgrind

|Todo| Try null move threat extensions

|Todo| Try MVA/LVA instead of fake-SEE

|Todo| Try simple SEE

|Todo| Win64 version from Makefile [win64]

|Todo| Learn how to branch in git :-) [git]

Also provide a source zip file on the download page.
http://nvie.com/posts/a-successful-git-branching-model/

|Todo| Scale passers with material [evaluate]

|Todo| King safety [evaluate]

|Todo| Remove evaluate.h [cleanup]

|Todo| Basic killers [search]

|Todo| Basic history [search]

|Todo| Basic counter move? [search]

|Todo| Checks in qsearch, at least in PV

#define minDepth -7

|Todo| Granularity of win32 clock too low? [win32]

|Todo| Enable test before install [build]

|Todo| Preserve parameter order in vector.json [tuning]

|Todo| Multicore support for tuning [speed]

|Todo| Left-right location parameters [evaluate]

|Todo| Before breaking out the tune loop, do a quadratic fit on the
       nearest 3 points and probe the bottom [tune]

|Todo| Experiment: tune each bishop square [evaluate]

|Todo| Expand board control. Include mobility [evaluate]

|Todo| Add white/black testing [qa,evaluate]

|Todo| Add left/right testing [qa,evaluate]

|Todo| Terminology: coefficient or parameter [qa]

|Todo| Check Rebel evaluation features [evaluate]

Ref: http://www.top-5000.nl/authors/rebel/chess840.htm

|Todo| Check Stockfish evaluation features [evaluate]

|Todo| Check "Fruit/Rybka" evaluation features [evaluate]

Go through eval_comp forwards and backwards again and
take many things.

|Todo| LittleChessEvaluationCompendium.pdf [evaluate]

|Todo| Measure repeatibility of tuner [verification,tune]

Tune with 10 different subsets of ccrl @ 1M
Observe variation of vector and residual 

Tune with 10 different subsets of ccrl @ 100k
Observe variation of vector and residual 

|Todo| Get residuals of some existing evaluations for comparison [evaluate]

 - Crafty 24.1
 - Fruit 2.1
 - Giraffe
 - Gnucheese
 - Hiarcs 14
 - Junior 2011
 - Komodo x?
 - Rookie 3.9
 - Rybka 2.3.2a
 - Shredder 12
 - Stockfish 6

|Todo| Consider gradient descent [tune]

|Todo| Test tuner on Rosenbrock function [tune]

https://en.wikipedia.org/wiki/Rosenbrock_function

|Todo| Parameter graphs (tune.dir) [tune]

|Todo| Reject illegal positions [usability]

- pawns on rank 1 and 8
- not one king per side
- too many pawns or promoted pieces
- side to move attacks other king

- also update chessmoves module for this

|Todo| Export version string to Python [python]

|Todo| In debugging mode give moves also in SAN for readability

|Todo| Accept a lambda as value to `info' in search() [python]

As a callback interface with the search info data

|Todo| Move ordering based on delta eval [search]

Then also cache evaluation in ttable

|Todo| Execute command line arguments as uci command [main,usability]

floyd [ <uciCommand> <uciOption> ... ]

eg.
floyd go depth 8
floyd help
floyd bench

|Todo| Consider persistent alarm thread [speed]

Profile first

|Todo| Consider persistent search thread [speed]

Profile first

|Todo| Implement 50 move rule [50move]

Also recognize 50-move as a game during search.

|Todo| Compile on FreeBSD [qa]

|Todo| Pondering [uci]

|Todo| Move generator test [qa]

moves 5 (includes divide, no time info)

